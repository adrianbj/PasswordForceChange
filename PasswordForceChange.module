<?php

/**
 * ProcessWire Password Force Change
 * by Adrian Jones
 *
 * Force users to change password the first time they log in
 *
 * ProcessWire 2.x
 * Copyright (C) 2011 by Ryan Cramer
 * Licensed under GNU/GPL v2, see LICENSE.TXT
 *
 * http://www.processwire.com
 * http://www.ryancramer.com
 *
 */

class PasswordForceChange extends WireData implements Module {

    public function init() {
        $this->session->addHookAfter('login', $this, 'profileRedirect');
        $this->addHookAfter('Password::setPass', $this, 'passwordChanged');
        $this->addHookAfter('InputfieldPassword::processInput', $this, 'passwordProcessed');
    }

    public function profileRedirect($event) {
        if(!$this->user->passwd_changed && $this->user->isLoggedin()){
            $this->error("You must change your password and it must not match your last password.");
            /*$f = $this->fields->get("pass");
            $f->collapsed = Inputfield::collapsedNo;
            $f->save();*/
            $this->session->redirect($this->config->urls->admin."profile/");
        }
    }

    public function passwordChanged($event) {
        if($this->user->isChanged("pass")){
            /*$f = $this->fields->get("pass");
            $f->collapsed = Inputfield::collapsedYes;
            $f->save();*/
            $this->user->of(false);
            $this->user->passwd_changed = 1;
            $this->user->save();
        }
        else{
            $this->profileRedirect();
        }

    }

    public function passwordProcessed($event) {
        if($event->object->value == ''){
            $this->profileRedirect();
        }

    }

    public function ___install() {

        //Create passwd_changed field
        if(!$this->fields->passwd_changed) {
            $f = new Field();
            $f->type = "FieldtypeCheckbox";
            $f->name = "passwd_changed";
            $f->label = "Password Changed";
            $f->description = "This is used by the Force Password Change module. You can uncheck this at any time to force the user to change their password on next login.";
            $f->collapsed = Inputfield::collapsedYes;
            $f->save();

            $user_template = $this->templates->get("user");
            $user_template->fields->add($f);
            $user_template->fields->save();

            foreach($this->users as $u){
                $u->of(false);
                $u->passwd_changed = 1;
                $u->save();
            }

        }

    }


    public function ___uninstall() {

        //remove passwd_changed field
        if($this->fields->passwd_changed) {

            $f = $this->fields->passwd_changed;

            $user_template = $this->templates->get("user");
            $user_template->fields->remove($f);
            $user_template->fields->save();

            $this->fields->delete($f);

        }

    }

}

